From 824674260569312b9e0ce424828d8ada49b2654d Mon Sep 17 00:00:00 2001
From: Andy Doan <andy@foundries.io>
Date: Thu, 26 Mar 2020 13:59:32 -0500
Subject: [PATCH] Keep track of the dynamic port created by a reverse tunnel

This is terrible but works

Signed-off-by: Andy Doan <andy@foundries.io>
---
 packet.h     | 2 ++
 serverloop.c | 3 +++
 session.c    | 6 ++++++
 3 files changed, 11 insertions(+)

diff --git a/packet.h b/packet.h
index 8ccfd2e0..639f89b2 100644
--- a/packet.h
+++ b/packet.h
@@ -63,6 +63,8 @@ struct ssh {
 	int local_port;
 	char *rdomain_in;
 
+	int dynamic_port;
+
 	/* Optional preamble for log messages (e.g. username) */
 	char *log_preamble;
 
diff --git a/serverloop.c b/serverloop.c
index 340b19a5..f02baddd 100644
--- a/serverloop.c
+++ b/serverloop.c
@@ -850,6 +850,9 @@ server_input_global_request(int type, u_int32_t seq, struct ssh *ssh)
 			/* Start listening on the port */
 			success = channel_setup_remote_fwd_listener(ssh, &fwd,
 			    &allocated_listen_port, &options.fwd_opts);
+			if (allocated_listen_port != 0) {
+				ssh->dynamic_port = allocated_listen_port;
+			}
 		}
 		if ((resp = sshbuf_new()) == NULL)
 			fatal("%s: sshbuf_new", __func__);
diff --git a/session.c b/session.c
index 8c0e54f7..79b60d38 100644
--- a/session.c
+++ b/session.c
@@ -1130,6 +1130,12 @@ do_setup_env(struct ssh *ssh, Session *s, const char *shell)
 		    options.permit_user_env_whitelist);
 	}
 
+	if (ssh->dynamic_port != 0) {
+		char port[8];
+		snprintf(port, sizeof port, "%d", ssh->dynamic_port);
+		child_set_env(&env, &envsize, "SSH_REVERSE_PORT", port);
+	}
+
 #ifdef USE_PAM
 	/*
 	 * Pull in any environment variables that may have
-- 
2.25.1

